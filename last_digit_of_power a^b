def last_digit_of_power(a, b):
    if b == 0:
        return 1
    # Reduce the problem using modular arithmetic
    a = a % 10
    # Patterns repeat every 4 for any base 'a' Therefore, use the remainder of b % 4
    b = b % 4
    # If b % 4 is 0, it means the cycle has completed, use 4 instead
   
    if b == 0:
        b = 4

    # Calculate the result
    result = (a ** b) % 10
    return result

# Example usage
a = 3
b = 10
print(last_digit_of_power(a, b))  # Output: 9
